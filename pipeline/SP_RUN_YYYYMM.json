{
	"name": "SP_RUN_YYYYMM",
	"properties": {
		"activities": [
			{
				"name": "SP_YYYYMM",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GET_CFG",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GET_CFG').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "SP_RUN_YYYYMM",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@pipeline().parameters.RUN_PGM",
									"type": "Expression"
								},
								"storedProcedureParameters": {
									"F_YYYYMM": {
										"value": {
											"value": "@if(\n    empty(item().from),\n    item().FROM_DT,\n    formatDateTime(item().from,item().source_condition)\n)",
											"type": "Expression"
										},
										"type": "String"
									},
									"T_YYYYMM": {
										"value": {
											"value": "@if(\n    empty(item().to),\n    item().TO_DT,\n    formatDateTime(item().to,item().source_condition)\n)",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "LS_FRW_ASQL",
								"type": "LinkedServiceReference",
								"parameters": {
									"SRC_SRV_NM": {
										"value": "@pipeline().globalParameters.GP_LK_SRC_SRV_NM",
										"type": "Expression"
									},
									"SRC_DB_NM": {
										"value": "@pipeline().globalParameters.GP_LK_SRC_DB_NM",
										"type": "Expression"
									},
									"SRC_USER_NM": {
										"value": "@pipeline().globalParameters.GP_LK_SRC_USER_NM",
										"type": "Expression"
									},
									"SRC_DB_KVS_NM": {
										"value": "@pipeline().globalParameters.GP_LK_SRC_DB_KVS_NM",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "SP_COMPLETED",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "SP_RUN_YYYYMM",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "SP_COMPLETED",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"RUN_PGM": {
										"value": "@pipeline().parameters.RUN_PGM",
										"type": "Expression"
									},
									"START_DATE": {
										"value": "@item().yyyyMMddHHmmss",
										"type": "Expression"
									},
									"PARM_FROM": {
										"value": "@if(\n    empty(item().from),\n    item().FROM_DT,\n    formatDateTime(item().from,item().source_condition)\n)",
										"type": "Expression"
									},
									"PARM_TO": {
										"value": "@if(\n    empty(item().to),\n    item().TO_DT,\n    formatDateTime(item().to,item().source_condition)\n)",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "GET_CFG",
				"description": "Get migration table information from configuration table",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT [load_id]\n      ,[source_name]\n      ,[interface_id]\n      ,[interface_name]\n      ,[load_type]\n      ,[source_object_schema]\n      ,[source_object]\n      ,[source_field]\n      ,[source_condition]\n      ,[target_object_schema]\n      ,[target_object]\n      ,[target_field]\n      ,[target_condition]\n      ,[from]\n      ,[to]\n      ,[interval_type]\n      ,[r_mig_flg]\n      ,[b_mig_flg]\n      ,[c_mig_flg]\n      ,[usecase_id]\n      ,[src_sys_id]\n      ,[trigger_id]\n      ,[rest_call_url]\n      ,[synapse_object_schema]\n      ,[synapse_object]\n      ,[synapse_object_type]\n      ,FORMAT(DATEADD(MONTH,+@{pipeline().parameters.FROM_INTERVAL},DATEADD(HOUR, 9 ,GETDATE())),'yyyyMM') AS FROM_DT \n      ,FORMAT(DATEADD(MONTH,+@{pipeline().parameters.TO_INTERVAL},DATEADD(HOUR, 9 ,GETDATE())),'yyyyMM') AS TO_DT\n      ,FORMAT(DATEADD(HOUR, 9 ,GETDATE()), 'yyyyMMddHHmmss') AS 'yyyyMMddHHmmss'\n\t,FORMAT(DATEADD(HOUR, 9 ,GETDATE()), 'yyyy-MM-dd') AS 'yyyyMMdd'\n  FROM [META].[LOAD_INV_EAI]\n  WHERE 1=1\n  AND [source_name] = 'SP'\n  AND [source_condition] = 'yyyyMM'",
							"type": "Expression"
						},
						"partitionOption": "None"
					},
					"firstRowOnly": false
				}
			}
		],
		"parameters": {
			"RUN_PGM": {
				"type": "string"
			},
			"FROM_INTERVAL": {
				"type": "string",
				"defaultValue": "-1"
			},
			"TO_INTERVAL": {
				"type": "string",
				"defaultValue": "-1"
			}
		},
		"folder": {
			"name": "2ND PROJECT/3. FRAMEWORK/STOREDPROCEDURE"
		},
		"annotations": [],
		"lastPublishTime": "2023-05-31T23:39:00Z"
	}
}